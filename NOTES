* Guard against user's writing /.* ?

* time attribute for all writes?

* There should be a way to query lattice size of stored data

* Do we need delete? - yes

* A single hdf5 class?

* No slabs - use different lattices and attributes to save space.


* Lattice objects are written an D-dim datasets with each node contributing data for its hyperblock.
* Lattice: size is in S->dim, rank is S->rank


* Reader:read("/path/to/data/set" [, {lattice = lat, kind = "kind of data"}])

* Kinds if there is "kind" attribute, its value is one of the following:

    "String"                      H5I_DATASET
    "Real"                        H5I_DATASET
    "Complex"                     H5I_DATASET
    "MatrixReal"                  H5I_DATASET
    "MatrixComplex"               H5I_DATASET
    "VectorInt"                   H5I_DATASET
    "VectorReal"                  H5I_DATASET
    "VectorComplex"               H5I_DATASET
    "ColorVector"                 H5I_DATASET
    "ColorMatrix"                 H5I_DATASET
    "DiracFermion"                H5I_DATASET
    "DiracPropagator"             H5I_DATASET
    "LatticeInt"                  H5I_DATASET
    "LatticeReal"                 H5I_DATASET
    "LatticeComplex"              H5I_DATASET
    "LatticeColorVector"          H5I_DATASET
    "LatticeColorMatrix"          H5I_DATASET
    "LatticeDiracFermion"         H5I_DATASET
    "LatticeDiracPropagator"      H5I_DATASET

* other HDF5 elements without corresponding qlua objects have implicit kinds:

    "Group"                     H5I_GROUP
    "DataSpace"                 H5I_DATASPACE
    "DataSet"                   H5I_DATASET
    "DataType"                  H5I_DATATYPE
    "Attribute"                 H5I_ATTR
    "File"                      H5I_FILE
    "Unknown"                   default case, never happens

--------- rethink
* reader
   ** check the first argument
   ** get hid_t of the second argument
   ** set kind to NULL, set lattice to NULL
   ** if argument three is a lattice, remember it
   *** if there is a fourth argument, check that it's a string and remember it as kind
   ** if argument three is a string, remember it as kind
   ** if kind is NULL, get it from h
   ** dispatch on kind, call fn(L, b, h, lattice)

* add exists to the reader and the writer
