#!/bin/sh -f

## version ID. 
version='XXX-master'

# show_help exit_code
show_help() {
  cat << EOF
    usage: configure [options]

    Options:

     --help                   show this help and exit
     --prefix=DIR             installation prefix
     --bindir=DIR             use DIR instead of PREFIX/bin for executables
     --libdir=DIR             use DIR instead of PREFIX/lib/qlua for libraries
     --incdir=DIR             use DIR instead of PREFIX/include for headers
     --docdir=DIR             use DIR instead of PREFIX/share/doc/qlua for docs
     --with-extras            include extra LHPC extensions
     --with-lua=DIR           use DIR/lib and DIR/include for lua installation
     --with-qdp=DIR           use DIR/bin/qdp-config to query QDP configuration
     --with-<package>=DIR     use DIR/bin/<package>-config to query package
     --with[out]-nc=2         include [exclude] Nc=2 special case
     --with[out]-nc=3         include [exclude] Nc=3 special case
     --with[out]-nc=N         include [exclude] Nc=N special case
     --with-nc=all            include all special Nc cases
     --without-nc=any         exclude all special Nc cases

   Supported packages:
     clover                   SciDAC L3 clover inverter
     mdwf                     SciDAC L3 Moebius Domain Wall inverter
     lhpc-aff                 LHPC AFF library
     hdf5                     Hierarchical Data Format library
     gsl                      GSL library
     atlas                    Use ATLAS for CBLAS
     hql                      Use HQL

   Environment variables:
     CC                      C compiler to use
     CFLAGS                  Flags to pass to the compiler
     LD                      Link editor to use
     LDFLAGS                 Flags to pass to the linker
     LIBS                    Additional libraries to use
     AR                      Library archiver
     RANLIB                  Library indexing tool
EOF
exit $1
}

# show_error arg ...
show_error() {
   echo "**** Configure error: $*" 1>&2
   exit 1
}

# configuration variables
prefix=
bindir=
libdir=
incdir=
docdir=

# defaults
default_prefix=/usr/local
# rest is relative to prefix by default
bindir_loc=bin
libdir_loc=lib/qlua
incdir_loc=include
docdir_loc=share/doc/qlua
default_cc=gcc
default_copts="-Wall -g"
default_cflags=""
default_ld="gcc -g"
default_ldflags=""
default_ar=ar
default_ranlib="echo RANLIB"
use_nc2=1
use_nc3=1
use_ncN=1

# process_args arg ...
process_args() {
  while [ $# -ne 0 ]; do
    case "$1" in
      --help)  show_help 0 ;;
      --prefix=*)       prefix=`echo "$1" | sed -e 's/--prefix=//'`   ;;
      --bindir=*)       bindir=`echo "$1" | sed -e 's/--bindir=//'`   ;;
      --libdir=*)       libdir=`echo "$1" | sed -e 's/--libdir=//'`   ;;
      --incdir=*)       incdir=`echo "$1" | sed -e 's/--incdir=//'`   ;;
      --docdir=*)       docdir=`echo "$1" | sed -e 's/--docdir=//'`   ;;
      --with-lua=*)     lua=`echo "$1" | sed -e 's/--with-lua=//'`    ;;
      --with-qdp=*)     qdp=`echo "$1" | sed -e 's/--with-qdp=//'`    ;;
      --with-clover=*)    clover=`echo "$1" | sed -e 's/--with-clover=//'` ;;
      --with-mdwf=*)      mdwf=`echo "$1" | sed -e 's/--with-mdwf=//'` ;;
      --with-lhpc-aff=*)  aff=`echo "$1" | sed -e 's/--with-lhpc-aff=//'`  ;;
      --with-hdf5=*)      hdf5=`echo "$1" | sed -e 's/--with-hdf5=//'`  ;;
      --with-gsl=*)       gsl=`echo "$1" | sed -e 's/--with-gsl=//'`  ;;
      --with-atlas=*)     atlas=`echo "$1" | sed -e 's/--with-atlas=//'`  ;;
      --with-hql=*)       hql=`echo "$1" | sed -e 's/--with-hql=//'`  ;;
      --with-nc=2)        use_nc2=1 ;;
      --with-nc=3)        use_nc3=1 ;;
      --with-nc=N)        use_ncN=1 ;;
      --with-nc=all)      use_nc2=1 ; use_nc3=1 ; use_ncN=1 ;;
      --without-nc=2)     use_nc2=0 ;;
      --without-nc=3)     use_nc3=0 ;;
      --without-nc=N)     use_ncN=0 ;;
      --without-nc=any)   use_nc2=0 ; use_nc3=0 ; use_ncN=0 ;;
      --with-extras)      extras=true ;;
      ## add other packages here
      *) show_error "Unknown argument $1" ;;
    esac
    shift
  done

  if [ "$use_nc3" -eq "0" ] ; then
      clover=
      mdwf=
      extras=
  fi
}

# normalize
normalize() {
  prefix=${prefix:-$default_prefix}
  bindir=${bindir:-$prefix/$bindir_loc}
  libdir=${libdir:-$prefix/$libdir_loc}
  incdir=${incdir:-$prefix/$incdir_loc}
  docdir=${docdir:-$prefix/$docdir_loc}

  # flags and defaults
  cc="${CC:-$default_cc}"
  copts="${COPTS:-$default_copts}"
  cflags="${CFLAGS:-$default_cflags}"
  default_ld="${cc:-$default_ld}"
  ld="${LD:-$default_ld}"
  ldflags="${LDFLAGS:-$default_ldflags}"
  libs="${LIBS}"
  ar="${AR:-$default_ar}"
  ranlib="${RANLIB:-$default_ranlib}"

  [ -z "$lua" ] && show_error "LUA must be explicitly specified"
  [ -f $lua/include/lua.h ] || show_error "No lua.h found under $lua"
  [ -f $lua/lib/liblua.a ] || show_error "No liblua.a found under $lua"
  [ -z "$qdp" ] && show_error "QDP must be explicitly specified"
  [ -x $qdp/bin/qdp-config ] || show_error "No qdp-config found under $qdp"
  qdp_cc=`$qdp/bin/qdp-config --cc`
  qdp_copts=`$qdp/bin/qdp-config --copts`
  qdp_cflags=`$qdp/bin/qdp-config --cflags`
  qdp_ldflags=`$qdp/bin/qdp-config --ldflags`
  qdp_libs=`$qdp/bin/qdp-config --libs`
  if [ ! -z "$clover" ] ; then
     [ -x "$clover/bin/clover-config" ] \
        || show_error "No clover-config under $clover"
     clover_cflags=`$clover/bin/clover-config --cflags`
     clover_ldflags=`$clover/bin/clover-config --ldflags`
     clover_libs=`$clover/bin/clover-config --libs`
     [ -z "$gsl" ] && show_error "CLOVER requires GSL"
  fi
  if [ ! -z "$mdwf" ] ; then
     [ -x "$mdwf/bin/mdwf-config" ] \
        || show_error "No mdwf-config under $mdwf"
     mdwf_cflags=`$mdwf/bin/mdwf-config --cflags`
     mdwf_ldflags=`$mdwf/bin/mdwf-config --ldflags`
     mdwf_libs=`$mdwf/bin/mdwf-config --libs`
     [ -z "$gsl" ] && show_error "MDWF requires GSL"
  fi
  if [ ! -z "$aff" ] ; then
     [ -x "$aff/bin/lhpc-aff-config" ] \
        || show_error "No lhpc-aff-config under $aff"
     aff_cflags=`$aff/bin/lhpc-aff-config --cflags`
     aff_ldflags=`$aff/bin/lhpc-aff-config --ldflags`
     aff_libs=`$aff/bin/lhpc-aff-config --libs`
  fi
  # This is a bit sloppy - assume a regular installation of HDF5
  if [ ! -z "$hdf5" ] ; then
     hdf5_cflags="-I$hdf5/include"
     hdf5_ldflags="-L$hdf5/lib"
     hdf5_libs="-lhdf5"
  fi
  ## see if optimized CBLAS is chosen
  if [ ! -z "$atlas" ] ; then
     cblas_libs="-L$atlas/lib -lcblas"
  fi
  if [ ! -z "$gsl" ] ; then
    gsl_cflags=`$gsl/bin/gsl-config --cflags`
    if [ -z "$cblas_libs" ] ; then
      gsl_libs=`$gsl/bin/gsl-config --libs`
    else
      gsl_libs=`$gsl/bin/gsl-config --libs-without-cblas`
    fi
  fi
  if [ ! -z "$hql" ] ; then
     [ -x "$hql/bin/hql-config" ] \
        || show_error "No hql-config under $hql"
     hql_cflags=`$hql/bin/hql-config --cflags`
     hql_ldflags=`$hql/bin/hql-config --ldflags`
     hql_libs=`$hql/bin/hql-config --libs`
  fi
  ## Add other packages here
}

# show_config
show_config() {
   echo "QLUA configuration summary:"
   echo "====================================="
   echo "version                 $version"
   echo "prefix                  $prefix"
   echo "binaries directory      $bindir"
   echo "libraries directory     $libdir"
   echo "headers directory       $incdir"
   echo "doc directory           $docdir"
   echo "C compiler              $cc"
   echo "C optimization flags    $copts"
   echo "Compiler flags          $cflags"
   echo "Link editor             $ld"
   echo "Linking flags           $ldflags"
   echo "Additional libraries    $libs"
   echo "Archiver                $ar"
   echo "Ranlib                  $ranlib"
   echo "LUA location            $lua"
   echo "QDP location            $qdp"
   [ -z "$clover" ]  || echo "Clover location         $clover"
   [ -z "$mdwf" ]    || echo "MDWF location           $mdwf"
   [ -z "$aff" ]     || echo "AFF location            $aff"
   [ -z "$hdf5" ]    || echo "HDF5 location           $hdf5"
   [ -z "$gsl" ]     || echo "GSL location            $gsl"
   [ -z "$hql" ]     || echo "HQL location            $hql"
   [ -z "$cblas_libs" ] || echo "CBLAS libraries         $cblas_libs"
   [ "$use_nc2" == 0 ] || echo "Nc=2 special case"
   [ "$use_nc3" == 0 ] || echo "Nc=3 special case"
   [ "$use_ncN" == 0 ] || echo "Nc=N included"
   [ -z "$extras" ]  || echo "Extra oprations included"
   ## Add other packages here
   echo "====================================="
}

# build_config input output
## Add other packages below
build() {
  sed < $1 \
      -e "s|@version@|$version|g" \
      -e "s|@bindir@|$bindir|g" \
      -e "s|@libdir@|$libdir|g" \
      -e "s|@incdir@|$incdir|g" \
      -e "s|@docdir@|$docdir|g" \
      -e "s|@cc@|$cc|g" \
      -e "s|@cflags@|$cflags|g" \
      -e "s|@copts@|$copts|g" \
      -e "s|@ld@|$ld|g" \
      -e "s|@ldflags@|$ldflags|g" \
      -e "s|@libs@|$libs|g" \
      -e "s|@ar@|$ar|g" \
      -e "s|@ranlib@|$ranlib|g" \
      -e "s|@lua@|$lua|g" \
      -e "s|@qdp@|$qdp|g" \
      -e "s|@qdp_cflags@|$qdp_cflags|g" \
      -e "s|@qdp_ldflags@|$qdp_ldflags|g" \
      -e "s|@qdp_libs@|$qdp_libs|g" \
  | sed -e "s|@aff@|$aff|g" \
        -e "s|@aff_cflags@|$aff_cflags|g" \
        -e "s|@aff_ldflags@|$aff_ldflags|g" \
        -e "s|@aff_libs@|$aff_libs|g" \
  | sed -e "s|@hdf5@|$hdf5|g" \
        -e "s|@hdf5_cflags@|$hdf5_cflags|g" \
        -e "s|@hdf5_ldflags@|$hdf5_ldflags|g" \
        -e "s|@hdf5_libs@|$hdf5_libs|g" \
  | sed -e "s|@clover@|$clover|g" \
        -e "s|@clover_cflags@|$clover_cflags|g" \
        -e "s|@clover_ldflags@|$clover_ldflags|g" \
        -e "s|@clover_libs@|$clover_libs|g" \
  | sed -e "s|@mdwf@|$mdwf|g" \
        -e "s|@mdwf_cflags@|$mdwf_cflags|g" \
        -e "s|@mdwf_ldflags@|$mdwf_ldflags|g" \
        -e "s|@mdwf_libs@|$mdwf_libs|g" \
  | sed -e "s|@gsl@|$gsl|g" \
        -e "s|@gsl_cflags@|$gsl_cflags|g" \
        -e "s|@gsl_libs@|$gsl_libs|g" \
        -e "s|@cblas_libs@|$cblas_libs|g" \
  | sed -e "s|@use_nc2@|$use_nc2|g " \
        -e "s|@use_nc3@|$use_nc3|g " \
        -e "s|@use_ncN@|$use_ncN|g " \
  | sed -e "s|@extras@|$extras|g" \
  | sed -e "s|@hql@|$hql|g" \
        -e "s|@hql_cflags@|$hql_cflags|g" \
        -e "s|@hql_ldflags@|$hql_ldflags|g" \
        -e "s|@hql_libs@|$hql_libs|g" \
      > $2 \
|| show_error "Could not generate $2"
}

# build_modules
## Add other packages below
build_modules() {
  echo "#define QLUA_VERSION \"$version\""
  echo "#define QDP_VERSION \"$qdp\""
  if [ ! -z "$aff" ] ; then
    echo "#define HAS_AFF"
    echo "#define LHPC_AFF_VERSION \"$aff\""
  fi
  if [ ! -z "$hdf5" ] ; then
    echo "#define HAS_HDF5"
    echo "#define HDF5_VERSION \"$hdf5\""
  fi
  if [ ! -z "$clover" ] ; then
    echo "#define HAS_CLOVER"
    echo "#define CLOVER_VERSION \"$clover\""
  fi
  if [ ! -z "$mdwf" ] ; then
    echo "#define HAS_MDWF"
    echo "#define MDWF_VERSION \"$mdwf\""
  fi
  echo "#define QLUA_LIB \"$libdir\""
  if [ ! -z "$cblas_libs" ] ; then
     echo "#define HAS_CBLAS"
     echo "#define CBLAS_VERSION \"$cblas_libs\""
  fi
  if [ ! -z "$gsl" ] ; then
    echo "#define HAS_GSL"
    echo "#define GSL_VERSION \"$gsl\""
  fi
  if [ ! -z "$extras" ] ; then
    echo "#define HAS_EXTRAS"
  fi
  if [ ! -z "$hql" ] ; then
    echo "#define HAS_HQL"
    echo "#define HQL_VERSION \"$hql\""
  fi
  echo "#define USE_Nc2 $use_nc2"
  echo "#define USE_Nc3 $use_nc3"
  echo "#define USE_NcN $use_ncN"
}

######

if [ $# -eq 0 ]; then
  show_help 1
fi

process_args $*
normalize
build qlua-config.in qlua-config
chmod +x qlua-config
build Makefile.in Makefile
build_modules > modules.h
show_config
show_config > config.log
utils/mkdeps > deps

